// 連番を振った画像を生成する(function(){    var startNo = prompt("開始番号", 1);    if (!startNo){ return; }    // キャンセルされた場合は内もしない    var endNo = prompt("終了番号", 10);    if (!endNo){ return; }    // キャンセルされた場合は内もしない    var folderObj = Folder.selectDialog("保存先フォルダを指定してください");    if (!folderObj){ return; } // キャンセルされた場合は内もしない    saveMultiImage(folderObj, startNo, endNo, 80, 64, 4, 48);    // 80x64画像、桁数、文字サイズ})();// 連番画像ファイルを生成する関数function saveMultiImage(folderObj, startNo, endNo, w, h, d, fontSize){    startNo = parseFloat(startNo);    // 文字列を小数値に変換する    endNo = parseFloat(endNo);    step = 1;   // もし小数値の場合なら0.1とかにする    var pfx = "";    for(var i=0; i<d; i++){ pfx = pfx + "0"; }    for(var i=startNo; i<=endNo; i+=step){        var n = (pfx + i).slice(-d);        var filename = folderObj.fsName + "/" + n + ".jpg";        // 新規ドキュメントを作成する        var docObj = app.documents.add(            UnitValue(w, "px"),   // 横幅            UnitValue(h, "px"),   // 縦幅            72,    // ●72dpi            "", // ドキュメント名            NewDocumentMode.RGB,    //カラーモード            DocumentFill.WHITE,   // 背景は白色            1.0,    // 縦横比            BitsPerChannelType.EIGHT    // 8bit色深度        );        // テキストレイヤーを作成し番号を表示する        var layObj = docObj.artLayers.add();   // レイヤーを追加する        layObj.kind = LayerKind.TEXT;   // テキストレイヤーにする        layObj.textItem.font = "Times-Bold";        layObj.textItem.contents = i;   // 表示する番号（文字）        layObj.textItem.size = UnitValue(fontSize, "pt");;  // 文字サイズを設定        //layObj.textItem.justification = Justification.LEFT;   // 左揃え        var left = parseInt(layObj.bounds[0]);        var top = parseInt(layObj.bounds[1]);        var right = parseInt(layObj.bounds[2]);        var bottom = parseInt(layObj.bounds[3]);        var tw = right - left;   // 横幅        var th = bottom - top;  // 縦幅        var offsetX = 0;    // ●微調整用のオフセット（横）        var offsetY = 0;   // ●微調整用のオフセット（縦）        var centerX = w/2-tw/2+offsetX;        var centerY = h/2-th/2+offsetY;        layObj.translate(centerX - left, centerY - top);   // レイヤーを移動        layObj.textItem.color = setRGBColor(255, 0, 0);  // ●赤色で描画        saveJPEG(filename); // JPEG形式で保存する関数を呼び出す    }}// JPEG形式で保存するfunction saveJPEG(filename){    var fileObj = new File(filename);    var jpegOpt = new JPEGSaveOptions();    jpegOpt.embedColorProfile = true;   // カラープロファイルを埋め込む    jpegOpt.quality = 8;    // 品質は8    jpegOpt.formatOptions = FormatOptions.PROGRESSIVE;  // プログレッシブにする    jpegOpt.scans = 3;  // スキャンラインは3    jpegOpt.matte = MatteType.NONE; // カラーマットなし    activeDocument.saveAs(fileObj, jpegOpt, true, Extension.LOWERCASE);    app.activeDocument.close(SaveOptions.DONOTSAVECHANGES); // 何もせず閉じる}// カラーを定義しSolidColorオブジェクトを返すfunction setRGBColor(r, g, b){    var color = new SolidColor();    color.rgb.red = r;    color.rgb.green = g;    color.rgb.blue = b;    return color;}