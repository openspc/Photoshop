// テキスト内容に特定の文字列を含むレイヤーを返すvar lay1 = getLayerMatchText("Adobe");alert("Adobeの文字を含むレイヤーは"+lay1.length+"個ありました");var lay2 = getLayerMatchText("CC");alert("CCの文字を含むレイヤーは"+lay2.length+"個ありました");var lay3 = getLayerMatchText("CC 2014");alert("CC 2014の文字を含むレイヤーは"+lay3.length+"個ありました");// 特定の文字列を含むレイヤーオブジェクトを配列で返す// IN : 検索対象となる文字列// OUT : 指定した名前を持つレイヤーオブジェクトを格納した配列function getLayerMatchText(macthText){    var list = getAllLayer(app.activeDocument, []);    var result = [];    // 結果を入れる配列    for(var i=0; i<list.length; i++){        if (list[i].kind == LayerKind.TEXT){    // テキストの場合に処理            // シリアル検索で先頭から該当する文字列が含まれるか調べる            var s = list[i].textItem.contents.indexOf(macthText);            if (s > -1){    // 文字列が存在した場合                result.push(list[i]);            }        }    }    return result;    // レイヤーセットを除くすべてのレイヤーオブジェクトを取得する    // IN : レイヤーオブジェクト, 配列オブジェクト    // OUT : レイヤーオブジェクトを格納した配列オブジェクト    function getAllLayer(obj, ary){        for(var i=0; i<obj.layers.length; i++){            if (obj.layers[i].kind){    // レイヤーセット以外の場合                ary.push(obj.layers[i]);            }else{  // レイヤーセットなので再帰                getAllLayer(obj.layers[i], ary);            }        }        return ary; // 結果は配列で返す    }}