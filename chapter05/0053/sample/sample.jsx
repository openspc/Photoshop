// すべてのレイヤーの不透明度や矩形サイズをファイルに書き出すvar fileObj = File.saveDialog("保存ファイル名を指定してください", "result.txt");if (fileObj != null){  // 保存先が指定された    var flag = fileObj.open("w");   // 書き込みモードで開く    if (flag){  // 書き込める状態の場合は以下の処理を行う        var list = getAllLayer(app.activeDocument, []); // すべてのレイヤーを取得する        for(var i=0; i<list.length; i++){            fileObj.write(list[i].name+"　");  // レイヤー名を書き出す            var opac = list[i].opacity; // 不透明度            var left = list[i].bounds[0];   // 左            var top = list[i].bounds[1];   // 上            var right = list[i].bounds[2];   // 右            var bottom = list[i].bounds[3];   // 下            left = left.as("px");   // ピクセル単位に変換            top = top.as("px");   // ピクセル単位に変換            right = right.as("px");   // ピクセル単位に変換            bottom = bottom.as("px");   // ピクセル単位に変換            fileObj.writeln("不透明度："+opac+"%　("+left+"-"+top+")-("+right+"-"+bottom+")");        }        fileObj.close();    // ファイルを閉じる    }else{        alert("ファイルが開けません。書き込み禁止になっていないか確認してください");    }} // レイヤーセットを除くすべてのレイヤーオブジェクトを取得する// IN : レイヤーオブジェクト, 配列オブジェクト// OUT : レイヤーオブジェクトを格納した配列オブジェクトfunction getAllLayer(obj, ary){    for(var i=0; i<obj.layers.length; i++){        if (obj.layers[i].kind){    // レイヤーセット以外の場合            ary.push(obj.layers[i]);        }else{  // レイヤーセットなので再帰            getAllLayer(obj.layers[i], ary);        }    }    return ary; // 結果は配列で返す}