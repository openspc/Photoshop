// 空っぽのレイヤーを削除するvar list = getAllLayer(app.activeDocument, []);for(var i=list.length-1; i>=0; i--){    try{    // 背景がなくレイヤーが1つになった場合はエラーになるので回避        if (checkEmptyLayer(list[i])){            list[i].remove();   // 削除        }    }catch(e){}}// レイヤーセットを除くすべてのレイヤーオブジェクトを取得する関数// IN : レイヤーオブジェクト, 配列オブジェクト// OUT : レイヤーオブジェクトを格納した配列オブジェクトfunction getAllLayer(obj, ary){    for(var i=0; i<obj.layers.length; i++){        if (obj.layers[i].kind){    // レイヤーセット以外の場合            ary.push(obj.layers[i]);        }else{  // レイヤーセットなので再帰            getAllLayer(obj.layers[i], ary);        }    }    return ary; // 結果は配列で返す}// レイヤーが空っぽかどうか調べる関数// IN : レイヤーオブジェクト// OUT : trueなら空っぽ、falseなら画像があるfunction checkEmptyLayer(layObj){    // 選択されたレイヤーが空っぽかどうか調べる    var rect = layObj.bounds;    var left = parseFloat(UnitValue(rect[0], "px"));    var top = parseFloat(UnitValue(rect[1], "px"));    var right = parseFloat(UnitValue(rect[2], "px"));    var bottom = parseFloat(UnitValue(rect[3], "px"));    if ((left == 0) && (top == 0) && (right == 0) && (bottom == 0)){        return true;    // 空っぽならtrueを返す    }    return false;   // レイヤーに何か描かれている場合はfalseを返す}